{
  "name": "@mxenabled/web-widget-sdk",
  "version": "0.0.13",
  "description": "MX Web Widget SDK",
  "main": "./dist/cjs/index.js",
  "types": "./dist/types/src/index.d.ts",
  "exports": {
    ".": {
      "import": {
        "default": "./dist/esm/index.js"
      },
      "require": {
        "default": "./dist/cjs/index.js"
      }
    }
  },
  "files": [
    "dist"
  ],
  "scripts": {
    "build": "npm run clean && npm run compile && npm run bundle && npm run documentation",
    "build:optional": "[ ! -d build ] && npm run build || true",
    "bundle": "rollup -c",
    "clean": "npm run clean:build && npm run clean:dist",
    "clean:build": "[ -d build ] && rm -r build || true",
    "clean:dist": "[ -d dist ] && rm -r dist || true",
    "compile": "npm run compile:version && npm run compile:sdk && npm run compile:types && npm run compile:cypress && npm run compile:jest",
    "compile:cypress": "tsc --strict --noEmit --types cypress,node $(find cypress -not -path 'cypress/application/*' -type f -name *.ts)",
    "compile:jest": "tsc --strict --noEmit --types jest,node $(find jest -type f -name *.ts)",
    "compile:sdk": "tsc --outDir build",
    "compile:types": "tsc --declaration --emitDeclarationOnly --outDir dist/types",
    "compile:version": "ts-node bin/generate-version-file.ts",
    "documentation": "cp node_modules/@mxenabled/widget-post-message-definitions/docs/web-sdk-generated.md docs/widget_callback_props.md",
    "example": "npm run build:optional && mx-sso-api-proxy run --serve-local-files --open-path example",
    "format": "npm run prettier -- -w",
    "lint": "eslint src example jest cypress",
    "prepack": "npm run build",
    "prettier": "prettier src example jest cypress --ignore-path .gitignore",
    "spellcheck": "cspell $(git ls-files)",
    "test": "jest --verbose --coverage",
    "test:build": "./bin/test-build",
    "test:cypress": "cypress run",
    "test:integration": "./bin/test-integration",
    "test:server": "ts-node -O {\\\"module\\\":\\\"commonjs\\\"} cypress/application/server.ts",
    "watch": "npm-watch"
  },
  "watch": {
    "build": {
      "patterns": [
        "src"
      ],
      "extensions": "ts"
    }
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/mxenabled/web-widget-sdk"
  },
  "license": "MIT",
  "dependencies": {
    "@mxenabled/widget-post-message-definitions": "^1.4.0"
  },
  "devDependencies": {
    "@babel/cli": "^7.17.6",
    "@babel/core": "^7.17.8",
    "@babel/preset-env": "^7.16.11",
    "@babel/preset-typescript": "^7.16.7",
    "@mxenabled/sso-api-proxy": "^1.2.0",
    "@rollup/plugin-node-resolve": "^13.1.3",
    "@rollup/plugin-typescript": "^8.3.1",
    "@types/axios": "^0.14.0",
    "@types/express": "^4.17.13",
    "@types/jest": "^27.4.1",
    "@types/node-fetch": "^2.6.1",
    "@typescript-eslint/eslint-plugin": "^5.16.0",
    "@typescript-eslint/parser": "^5.16.0",
    "axios": "^0.26.1",
    "babelify": "^10.0.0",
    "cspell": "^6.1.1",
    "cypress": "^9.5.3",
    "dotenv": "^16.0.0",
    "eslint": "^8.11.0",
    "express": "^4.17.3",
    "jest": "^27.5.1",
    "msw": "^0.39.2",
    "node-fetch": "^3.2.3",
    "npm-watch": "^0.11.0",
    "prettier": "^2.5.1",
    "rollup": "^2.70.1",
    "rollup-plugin-terser": "^7.0.2",
    "start-server-and-test": "^1.14.0",
    "ts-node": "^10.7.0",
    "typescript": "^4.6.2"
  },
  "prettier": {
    "printWidth": 100,
    "semi": false,
    "trailingComma": "all",
    "singleQuote": false
  },
  "eslintConfig": {
    "root": true,
    "parser": "@typescript-eslint/parser",
    "plugins": [
      "@typescript-eslint"
    ],
    "env": {
      "browser": true,
      "node": true
    },
    "extends": [
      "eslint:recommended",
      "plugin:@typescript-eslint/recommended"
    ],
    "rules": {
      "semi": [
        "error",
        "never"
      ],
      "quotes": [
        "error",
        "double"
      ],
      "no-trailing-spaces": "error",
      "@typescript-eslint/no-unused-vars": [
        "error",
        {
          "argsIgnorePattern": "^_",
          "varsIgnorePattern": "^_"
        }
      ]
    },
    "ignorePatterns": [
      "**/node_modules/**",
      "**/build/**"
    ]
  },
  "jest": {
    "collectCoverageFrom": [
      "src/**/**"
    ],
    "setupFiles": [
      "./jest/setup.ts"
    ],
    "setupFilesAfterEnv": [
      "./jest/mocks.ts"
    ],
    "testEnvironment": "jsdom",
    "testPathIgnorePatterns": [
      "<rootDir>/node_modules",
      "<rootDir>/dist",
      "<rootDir>/build",
      "<rootDir>/example"
    ],
    "transformIgnorePatterns": []
  }
}
